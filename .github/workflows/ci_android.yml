name: Android Integration Tests

on:
  workflow_call:
  workflow_dispatch:

jobs:
  android:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      max-parallel: 1
      matrix:
        # Conservative stable API coverage for reliable CI
        api-level: [28, 26, 23]
        include:
          - api-level: 28
            target: default
            arch: x86_64
          - api-level: 26
            target: default
            arch: x86_64
          - api-level: 23
            target: default
            arch: x86_64
      fail-fast: false
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: beta
          cache: true

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ./example/.dart_tool
            ./example/build
          key: flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            flutter-${{ runner.os }}-

      - name: Install Flutter dependencies
        run: |
          flutter --version
          flutter doctor -v
          flutter pub get ./example

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/.gradle
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Cache AVD
        uses: actions/cache@v4
        id: cache-avd
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ runner.os }}-${{ matrix.api-level }}
          restore-keys: |
            avd-${{ runner.os }}-

      - name: Run integration tests
        timeout-minutes: 35
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          working-directory: ./example
          arch: ${{ matrix.arch }}
          emulator-boot-timeout: 300
          disable-spellchecker: true
          force-avd-creation: false
          disk-size: 4GB
          ram-size: 2048M
          heap-size: 512M
          sdcard-path-or-size: ${{ matrix.api-level < 29 && '10M' || null }}
          emulator-options: '-accel on -no-snapshot-load -no-snapshot-save -wipe-data -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none'
          script: |
            echo "Waiting for emulator to be fully ready (API ${{ matrix.api-level }})..."
            adb wait-for-device
            timeout 120 bash -c 'until [[ $(adb shell getprop sys.boot_completed) == "1" ]]; do echo "Waiting for boot..."; sleep 3; done'
            timeout 60 bash -c 'until [[ $(adb shell getprop service.bootanim.exit) == "1" ]]; do echo "Waiting for boot animation..."; sleep 2; done'
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0
            echo "Emulator ready, starting tests..."
            flutter build apk --debug
            adb install -r build/app/outputs/flutter-apk/app-debug.apk
            adb shell pm grant studio.midoridesign.gal_example android.permission.WRITE_EXTERNAL_STORAGE
            adb shell pm grant studio.midoridesign.gal_example android.permission.READ_EXTERNAL_STORAGE
            flutter test integration_test/integration_test.dart
