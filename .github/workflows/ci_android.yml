name: Android Integration Tests

on:
  workflow_call:
  workflow_dispatch:

jobs:
  android:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      matrix:
        api-level: [34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21]
      fail-fast: false
      max-parallel: 4
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: beta
          cache: true

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ./example/.dart_tool
            ./example/build
          key: flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            flutter-${{ runner.os }}-

      - name: Install Flutter dependencies
        run: |
          flutter --version
          flutter doctor -v
          flutter pub get ./example

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/.gradle
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Cache AVD
        uses: actions/cache@v4
        id: cache-avd
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ runner.os }}-${{ matrix.api-level }}
          restore-keys: |
            avd-${{ runner.os }}-

      - name: Run integration tests
        id: Run-integration-tests
        continue-on-error: true
        timeout-minutes: 35
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          working-directory: ./example
          arch: x86_64
          emulator-boot-timeout: 360
          disable-spellchecker: true
          force-avd-creation: false
          disk-size: 6GB
          ram-size: 4096M
          heap-size: 1024M
          sdcard-path-or-size: ${{ matrix.api-level < 29 && '10M' || null }}
          emulator-options: -accel on -no-snapshot-load -no-snapshot-save -wipe-data -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none -memory 4096 -partition-size 6144
          script: |
            echo "Waiting for emulator to be fully ready..."
            adb wait-for-device
            timeout 60 bash -c 'until [[ $(adb shell getprop sys.boot_completed) == "1" ]]; do sleep 2; done'
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0
            echo "Emulator ready, starting tests..."
            if [ ${{ matrix.api-level }} -le 29 ]; then flutter build apk --debug; adb install -r build/app/outputs/flutter-apk/app-debug.apk; adb shell pm grant studio.midoridesign.gal_example android.permission.WRITE_EXTERNAL_STORAGE; adb shell pm grant studio.midoridesign.gal_example android.permission.READ_EXTERNAL_STORAGE; fi
            flutter test integration_test/integration_test.dart

      - name: Retry integration tests
        id: Retry-integration-tests
        continue-on-error: true
        timeout-minutes: 35
        if: steps.Run-integration-tests.outcome == 'failure'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          working-directory: ./example
          arch: x86_64
          emulator-boot-timeout: 360
          disable-spellchecker: true
          force-avd-creation: true
          disk-size: 6GB
          ram-size: 4096M
          heap-size: 1024M
          sdcard-path-or-size: ${{ matrix.api-level < 29 && '10M' || null }}
          emulator-options: -accel on -no-snapshot-load -no-snapshot-save -wipe-data -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none -memory 4096 -partition-size 6144
          pre-emulator-launch-script: |
            adb kill-server
            adb start-server
            rm -rf ~/.android/avd/*
            sudo pkill -f qemu-system || true
            sleep 5
          script: |
            flutter clean && flutter pub get
            echo "Waiting for emulator to be fully ready..."
            adb wait-for-device
            timeout 60 bash -c 'until [[ $(adb shell getprop sys.boot_completed) == "1" ]]; do sleep 2; done'
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0
            echo "Emulator ready, starting tests..."
            if [ ${{ matrix.api-level }} -le 29 ]; then flutter build apk --debug; adb install -r build/app/outputs/flutter-apk/app-debug.apk; adb shell pm grant studio.midoridesign.gal_example android.permission.WRITE_EXTERNAL_STORAGE; adb shell pm grant studio.midoridesign.gal_example android.permission.READ_EXTERNAL_STORAGE; fi
            flutter test integration_test/integration_test.dart

      - name: Re:Retry integration tests
        if: steps.Retry-integration-tests.outcome == 'failure'
        timeout-minutes: 40
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          working-directory: ./example
          arch: x86_64
          emulator-boot-timeout: 420
          disable-spellchecker: true
          force-avd-creation: true
          disk-size: 6GB
          ram-size: 4096M
          heap-size: 1024M
          sdcard-path-or-size: ${{ matrix.api-level < 29 && '10M' || null }}
          emulator-options: -accel on -no-snapshot-load -no-snapshot-save -wipe-data -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none -memory 4096 -partition-size 6144 -verbose
          pre-emulator-launch-script: |
            adb kill-server
            adb start-server
            rm -rf ~/.android/avd/*
            sudo pkill -f qemu-system || true
            sudo pkill -f emulator || true
            sleep 10
            echo "System memory info:"
            free -h
            echo "Available disk space:"
            df -h
          script: |
            flutter clean && flutter pub get
            echo "Waiting for emulator to be fully ready..."
            adb wait-for-device
            timeout 90 bash -c 'until [[ $(adb shell getprop sys.boot_completed) == "1" ]]; do echo "Waiting for boot..."; sleep 3; done'
            echo "Boot completed, waiting for system ready..."
            timeout 30 bash -c 'until [[ $(adb shell getprop service.bootanim.exit) == "1" ]]; do echo "Waiting for boot animation..."; sleep 2; done'
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0
            echo "Emulator fully ready, starting tests..."
            if [ ${{ matrix.api-level }} -le 29 ]; then flutter build apk --debug; adb install -r build/app/outputs/flutter-apk/app-debug.apk; adb shell pm grant studio.midoridesign.gal_example android.permission.WRITE_EXTERNAL_STORAGE; adb shell pm grant studio.midoridesign.gal_example android.permission.READ_EXTERNAL_STORAGE; fi
            flutter test integration_test/integration_test.dart